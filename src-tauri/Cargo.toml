[package]
name = "app"
version = "0.1.0"
description = "A Tauri App"
authors = ["you"]
license = ""
repository = ""
default-run = "app"
edition = "2018"
rust-version = "1.60"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "1.3.0", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "1.3.0", features = ["fs-read-dir", "fs-read-file", "path-all", "protocol-asset", "system-tray", "window-close", "window-hide", "window-maximize", "window-minimize", "window-show", "window-start-dragging", "window-unmaximize", "window-unminimize"] }
window-vibrancy = "0.3.2"
window-shadows = "0.2.1"
tauri-plugin-window-state = "0.1.0"
base64 = "0.21.2"
turbojpeg = {version = "0.5.2", features = ["image"] }
image = "0.24.6"
dcv-color-primitives = "0.5.4"
ul-sys = "1.3.1"
hidapi = "2.3.3"
lazy_static = "1.4.0"
once_cell = "1.18.0"
flate2 = "1.0.26"
infer = "0.13.0"
mime_guess = "2.0.4"
color-thief = "0.2.2"
reqwest = {version = "0.11.18", features= ["blocking", "stream"] }
async-recursion = "1.0.4"
urlencoding = "2.1.2"
futures-util = "0.3.28"


[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]
